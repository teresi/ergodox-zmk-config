#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "../zmk-nodefree-config/helper.h"

#include "./keypos_ergodox.h"
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

&mt {
    tapping-term-ms = <150>;
};


#define L_MAIN 0
#define L_LOW 1
#define L_UPP 2
#define L_BLU 3
#define L_TST 4


/* shifted-press */
/* fix issue where some programs interpret shifted keycodes w/o the shift; eg. &kp EXCL -> 1 */
/* SEE https://github.com/zmkfirmware/zmk/issues/759 */
/* I observed this if using a &lt -> &kp <symbol>, if pressed rapidly, the number results */
/* I observed this in Alacritty, but not in gnome-terminal */
ZMK_BEHAVIOR(sp, macro_one_param, \
    wait-ms = <16>; \
    tap-ms = <0>; \
    bindings = \
        <&macro_press &kp LSHFT>, \
        <&macro_param_1to1>, \
        <&macro_tap &kp MACRO_PLACEHOLDER>, \
        <&macro_release &kp LSHFT>; \
)

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <150>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <150>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/ {

	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <150>;
			quick-tap-ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
			hold-trigger-on-release;             // delay positional check until key-release
		};
	};



	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
			 //╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮       ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
				&kp GRAV        &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4    &kp NUMBER_5    &kp C_BRI_DEC           &kp C_BRI_UP    &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9    &kp NUMBER_0    &kp BKSP
			 //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤       ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
				&kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T           &kp KP_PLUS             &kp K_VOL_UP    &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BKSP
			 //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯       ╰───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
				&kp ESC         &kp A           &kp S           &kp D           &kp F           &kp G                                                   &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp APOS
			 //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╮       ╭───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
				&kp LSHIFT      &hml LCTRL Z    &hml LALT X     &hml LMETA C    &kp V           &kp B           &kp KP_MINUS            &kp K_VOL_DN    &kp N           &kp M           &hmr RMETA CMMA &hmr RALT DOT   &hmr RCTRL FSLH &kp ENTER
			 //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯       ╰───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
				&kp SYSREQ      &kp LCTRL       &kp LALT        &kp LEFT_META   &kp LSHIFT                                                                              &kp RSHIFT      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT
			 //├───────────────┼───────────────┼───────────────┼───────────────┼───────────────╯                                                                       ╰───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
			 //                                                                                ┼───────────────┼───────────────╮       ╭───────────────┼───────────────┤
				                                                                                &tog L_TST      &kp HOME                &kp END         &kp INS
			 //                                                                ┼───────────────┼───────────────┼───────────────┤       ├───────────────┼───────────────┼───────────────┼
				                                                                &lt L_LOW SPACE &kp BKSP        &kp PGUP                &kp PGDN        &kp ENTER       &lt L_UPP SPACE
			 //                                                                ┼───────────────┼───────────────┼───────────────┤       ├───────────────┼───────────────┼───────────────┼
				                                                                                                &kp RET                 &kp DEL
			 //                                                                                                ╰───────────────╯       ╰───────────────╯
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&trans     &trans       &trans      &trans      &trans &trans  &trans &trans &trans   &trans                   &trans &trans    &trans &trans
				&kp GRAVE  &kp N1       &kp N2      &kp N3      &kp N4 &kp N5  &trans &trans &kp N6   &kp N7                   &kp N8 &kp N9    &kp N0 &kp BSLH
				&kp ESC    &kp F1       &kp F2      &kp F3      &kp F4 &kp F5                &kp LEFT &kp DOWN                 &kp UP &kp RIGHT &trans &kp ENTER
				&kp LSHIFT &hml LCTRL F6 &hml LALT F7 &hml LGUI F8 &kp F9 &kp F10 &trans &trans &trans   &trans                   &trans &trans    &trans &kp RSHIFT
				&none      &none        &none       &none       &none                                 &none                    &none  &none     &none  &none
				                                                       &none   &none  &none  &none
				                                                &none  &none   &none  &none  &none    &lt L_BLU BSPC
				                                                               &none  &none
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&none      &none     &none    &none     &none                   &none       &none  &none            &none     &none         &none        &none                &none                 &none
				&sp GRAVE  &sp N1    &sp N2   &sp N3    &sp N4                  &sp N5      &trans &kp C_PLAY_PAUSE &sp N6    &sp N7        &sp N8       &sp N9               &sp N0                &sp BSLH
				&kp ESC    &kp LT    &kp LBRC &kp LBKT  &kp MINUS               &none                               &none     &kp UNDER     &kp RBKT     &kp RBRC             &kp GT                &kp ENTER
				&kp LSHIFT &kp LCTRL &kp LALT &kp LMETA &kp PLUS                &none       &trans &kp C_NEXT       &none     &kp EQUAL     &kt RMETA    &kp RALT             &kp RCTRL             &kp RSHIFT
				&none      &none     &none    &none     &none                                                                 &none         &none        &none                &none                 &none
				                                                                &none       &none  &none            &none
				                                        &lt L_BLU DEL &none       &none  &none            &none     &none
				                                                                            &none  &none
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none   &none  &none  &none   &none   &none   &none   &none   &bootloader
				&out OUT_USB &kp F1        &kp F2       &kp F3       &kp F4       &kp F5  &trans &trans &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 &none
				&out OUT_BLE &kp F11       &kp F12      &kp F13      &kp F14      &kp F15               &kp F16 &kp F17 &kp F18 &kp F19 &kp F20 &none
				&none        &hml LCTRL F21 &hml LALT F22 &hml LGUI F23 &kp F24      &trans  &trans &trans &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
				&none        &none         &none        &none        &none                                      &none   &none   &none   &none   &none
				                                                                  &none   &none  &none  &none
				                                                     &none        &none   &none  &none  &none   &none
				                                                                          &none  &none
			>;
		};
		layer_4 {
			bindings = <
				&bootloader
				&kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5      &kp NUM_6 &kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6
				&kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5      &kp NUM_6 &kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6
				&kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                          &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6
				&kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5      &kp NUM_6 &kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6
				&kp NUM_0 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4                                              &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6
				                                                  &to L_MAIN &kp NUM_1 &kp NUM_0 &kp NUM_1
				                                        &kp NUM_3 &kp NUM_4      &kp NUM_2 &kp NUM_2 &kp NUM_3 &kp NUM_4
				                                                                 &kp NUM_5 &kp NUM_5
			>;
		};
	};


};
